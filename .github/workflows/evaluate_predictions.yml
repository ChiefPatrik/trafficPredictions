name: Evaluate saved predictions 

on:
  schedule:
    - cron: '0 4 * * *'
  workflow_dispatch:
  
env:
  MLFLOW_TRACKING_PASSWORD: ${{ secrets.MLFLOW_TRACKING_PASSWORD }}
  MLFLOW_TRACKING_USERNAME: ${{ secrets.MLFLOW_TRACKING_USERNAME }}
  MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }}
  MONGO_USERNAME: ${{ secrets.MONGO_USERNAME }}
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}

jobs:
  evaluate_predictions:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: 'main'
          
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-poetry-
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.11.5

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          poetry --version

      - name: Install dependencies
        run: |
          if [ -d "~/.cache/pypoetry" ]; then
            echo "Using cached dependencies"
          else
            echo "Installing dependencies"
            poetry install
          fi

      - name: Setup DVC
        uses: iterative/setup-dvc@v1
        with:
          version: '3.48.4'

      - name: Setup Dagshub
        run: |
          poetry run dvc remote modify origin endpointurl https://dagshub.com/patrik.praprotnik/trafficPredictions.s3
          poetry run dvc remote modify origin --local access_key_id ${{ secrets.DAGSHUB_ACCESS_KEY_ID }}
          poetry run dvc remote modify origin --local secret_access_key ${{ secrets.DAGSHUB_SECRET_ACCESS_KEY }}

      - name: Pull data
        run: |
          poetry run dvc pull -r origin

      - name: Run evaluate_predictions.py
        run: |
          poetry run python src/models/evaluate_predictions.py
          if [ $? -eq 0 ]; then
            echo "evaluate_predictions.py executed successfully."
          else
            echo "Error executing evaluate_predictions.py"
            exit 1
          fi
       
